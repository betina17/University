     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 1400                        a dw 20
    15 00000002 2800                        b dw 40
    16 00000004 4600                        c dw 70
    17 00000006 1E00                        d dw 30
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; b+a-(4-d+2)+c+(a-b)
    23 00000000 66A1[06000000]                  mov ax, [d]
    24 00000006 66BB0400                        mov bx, 4
    25 0000000A 6683C302                        add bx, 2
    26 0000000E 6629C3                          sub bx, ax
    27 00000011 668B0D[02000000]                mov cx, [b]
    28 00000018 66030D[00000000]                add cx, [a]
    29 0000001F 6629D9                          sub cx, bx
    30 00000022 66030D[04000000]                add cx, [c]
    31 00000029 66A1[00000000]                  mov ax, [a]
    32 0000002F 668B1D[02000000]                mov bx, [b]
    33 00000036 6629D8                          sub ax, bx
    34 00000039 6601C1                          add cx, ax
    35                                          ; exit(0)
    36 0000003C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    37 0000003E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
