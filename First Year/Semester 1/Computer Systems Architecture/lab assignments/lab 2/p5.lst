     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14 00000000 04                          a db 4
    15 00000001 02                          b db 2
    16 00000002 05                          c db 5
    17 00000003 0300                        d dw 3
    18                                  ; our code starts here
    19                                  segment code use32 class=code
    20                                      start:
    21                                          ; [(a-b)*3+c*2]-d
    22 00000000 A0[00000000]                    mov al, [a] ;4
    23 00000005 8A1D[01000000]                  mov bl, [b] ;2
    24 0000000B 28D8                            sub al, bl ; 4-2=2
    25 0000000D B103                            mov cl, 3 
    26 0000000F F6E1                            mul cl ; al=2*3=6
    27 00000011 88C3                            mov bl, al ; bl=6=(a-b)*3
    28 00000013 A0[02000000]                    mov al, [c] ;5
    29 00000018 B102                            mov cl, 2 
    30 0000001A F6E1                            mul cl ; al=5*2=10=c*2
    31 0000001C 00C3                            add bl, al ; (a-b)*3+c*2=6+10=16
    32 0000001E 66A1[03000000]                  mov ax, [d]
    33 00000024 B700                            mov bh, 0
    34 00000026 6629C3                          sub bx, ax ; [(a-b)*3+c*2]-d=16-3=13
    35                                          
    36                                      
    37                                          ; exit(0)
    38 00000029 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    39 0000002B FF15[00000000]                  call    [exit]       ; call exit to terminate the program
